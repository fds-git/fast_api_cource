networks:
  network:


services:
  main:
    image: ${API_NAME}:${API_VERSION}
    container_name: ${API_NAME}
    build:
      context: .
      dockerfile: deployment/Dockerfile.api
    env_file:
      - .env
    restart: always
    volumes:
      - type: bind
        source: ./configs
        target: /workdir/configs
      - type: bind
        source: ./log/${API_NAME}
        target: /var/log
      - type: bind
        source: ./app/migrations
        target: /workspaces/fast_api_cource/app/migrations
    networks:
      - network
    ports:
      - ${API_PORT}:${APP_PORT}
    depends_on:
       - postgres
    #  - redis

    command: python -m poetry run uvicorn --host 0.0.0.0 --port ${APP_PORT} --log-config ${LOG_CONFIG} ${APP_MODULE}
  

  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_HOST}
    env_file:
      - .env
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - postgresdata:/var/lib/postgresql/data
    networks:
      - network
    restart: always


  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.13
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./docker-data/pgadmin-data:/var/lib/pgadmin
    user: '$UID:$GID'
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - network
    restart: unless-stopped


volumes:
  postgresdata: